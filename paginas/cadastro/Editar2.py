import streamlit as st
import os, sys
import time
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from funcoes.funcoes_cadastro import buscar_dados, atualizar_agente

# Campo para digitar matr√≠cula e bot√£o de busca
st.subheader("üîç Buscar Agente por Matr√≠cula")
matricula_busca = st.text_input("Digite a matr√≠cula")
buscar = st.button("Buscar")

dados_agente = None

# DADOS OP√á√ïES
options_cargo = [
    '',
    'CEL',
    'TC',
    'MAJ',
    'CAP',
    '1¬∫ TEN',
    '2¬∫ TEN',
    'SUB TEN',
    '1¬∫ SGT',
    '2¬∫ SGT',
    '3¬∫ SGT',
    'CB',
    'SD',
]
options_quadro = [
    '',
    'QOPM',
    'QOAPM',
    'QPMG'
]
options_setor = [
    '',
    'CHEFIA',
    'ADJUNTO',
    'SSA',
    'NTMB',
    'SS CSP',
    'SS PC',
    'NA',
    'NO',
    'PERMAN√äNCIA',
    'TI',  
    'SS CCI',
    'SS CI',
    'CR I',
    'CR II',
    'CR III',
    'NIE',
    'ASI-7 / 1¬∫ BPM',
    'ASI-11 / 2¬∫ BPM',
    'ASI-19 / 3¬∫ BPM',
    'ASI-14 / 4¬∫ BPM',
    'ASI-26 / 5¬∫ BPM',
    'ASI-6 / 6¬∫ BPM',
    'ASI-24 / 7¬∫ BPM',
    'ASI-23 / 8¬∫ BPM',
    'ASI-18 / 9¬∫ BPM',
    'ASI-13 / 10¬∫ BPM',
    'ASI-5 / 11¬∫ BPM',
    'ASI-4 / 12¬∫ BPM',
    'ASI-2 / 13¬∫ BPM',
    'ASI-21 / 14¬∫ BPM',
    'ASI-1 / 16¬∫ BPM',
    'ASI-8 / 17¬∫ BPM',
    'ASI-10 / 18¬∫ BPM',
    'ASI-3 / 19¬∫ BPM',
    'ASI-9 / 20¬∫ BPM',
    'ASI-6 / 25¬∫ BPM',
    'ASI-8 / 26¬∫ BPM',
    'ASI-15 / 15¬∫ BPM',
    'ASI-12 / 21¬∫ BPM',
    'ASI-16 / 22¬∫ BPM',
    'ASI-17 / 24¬∫ BPM',
    'ASI-11 / 3¬™ CIPM',
    'ASI-12 / 5¬™ CIPM',
    'ASI-16 / 6¬™ CIPM',
    'ASI-15 / 8¬™ CIPM',
    'ASI-13 / 10¬™ CIPM',
    'ASI-20 / 23¬∫ BPM',
    'ASI-22 / 1¬™ CIPM',
    'ASI-25 / 2¬™ CIPM',
    'ASI-22 / 4¬™ CIPM',
    'ASI-25 / 7¬™ CIPM'
]
options_funcao = [
    '',
    'ADJUNTO',
    'AG. DE BUSCA',
    'ANALISTA',
    'AUX√çLIAR ADM',
    'CHEFE', 
    'COORDENADOR',
    'GRADUADO',
    'MOTORISTA',
    'PERMAN√äNCIA',
    'SECRET√ÅRIA'
]
options_situacao = [
    '',
    'AGUAR. REG. EM SP',
    'AGUAR. RR',
    'CREDENCIADO',
    'DESCREDENCIADO',
    'EFETIVADO',
    'F√âRIAS',
    'LIC. ESPECIAL',
    'LIC. MATERNIDADE',
    'LIC. PATERNIDADE',
    'LIC. TRAT. INT. PART.',
    'LIC. TRAT. SA√öDE',
    'REST. TRAT. SA√öDE',
]
options_disponibilidade = [
    'DISPON√çVEL',
    'INDISPON√çVEL',
]

if buscar and matricula_busca.strip() != "":
    dados_agente = buscar_dados(matricula_busca)
    if not dados_agente:
        st.toast("Matr√≠cula n√£o encontrada.")
    else:
        st.toast('Matr√≠cula encontrada')
if dados_agente:
    st.markdown('<hr></hr>',unsafe_allow_html=True)
    with st.form('Atualizar Agentes',clear_on_submit=False):
        col1, col2, col3 = st.columns([1,2,1])
        col4, col5, col6 = st.columns(3)
        col7, col8, col9 = st.columns([1,1,2])
        with col1:
            matricula = st.text_input('Matricula', key='matricula',value=dados_agente[0],disabled=True)
        with col2:
            nome = st.text_input('Nome',value=dados_agente[1],key='nome')
        with col3:
            nome_guerra = st.text_input('Nome de Guerra',value=dados_agente[2], key='nome_guerra')
        with col4:
            cargo = st.selectbox(
                'Cargo',
                options_cargo,
                key='cargo',
                index=options_cargo.index(dados_agente[3])
            )
        with col5:
            quadro = st.selectbox(
                'Quadro',
                options_quadro,
                index=options_quadro.index(dados_agente[4]),
                key='quadro'
            )
        with col6:
            setor = st.selectbox(
                'Setor',
                options_setor,
                index=options_setor.index(dados_agente[5]),
                key='setor'
            )
        with col7:
            funcao = st.selectbox(
                'Fun√ß√£o',
                options_funcao,
                index=options_funcao.index(dados_agente[6]),
                key='funcao'
            )
        with col8:
            disponibilidade = st.selectbox(
                'Disponibilidade',
                options_disponibilidade,
                index=options_disponibilidade.index(dados_agente[8]),
                key='disponibilidade'
            )
        with col9:
            situacao = st.selectbox(
                'Situa√ß√£o',
                options_situacao,
                index=options_situacao.index(dados_agente[7]),
                key='situacao'
            )
        observacao = st.text_area('Observa√ß√£o', value=dados_agente[10], height=200, key='observacao')

        botao_habilitado = nome.strip() != ''
        atualiar = st.form_submit_button('Atualizar',disabled=not botao_habilitado)
        if atualiar:
            erros = []

            if nome.strip() == '':
                erros.append('Por favor digite um Nome!')
            if nome_guerra.strip() == '':
                erros.append('Por favor digite um Nome de Guerra!')
            if cargo == '':
                erros.append('Por favor selecione um Cargo!')
            if quadro == '':
                erros.append('Por favor selecione um Quadro!')
            if setor == '':
                erros.append('Por favor selecione um Setor!')
            if funcao == '':
                erros.append('Por favor selecione uma Fun√ß√£o!')
            if disponibilidade == '':
                erros.append('Por favor selecione uma Disponibilidade!')
            if situacao == '':
                erros.append('Por favor selecione uma Situa√ß√£o!')

            if erros:
                for erro in erros:
                    st.toast(erro, icon='‚ö†Ô∏è')
            else:
                # Aqui voc√™ pode chamar a fun√ß√£o de atualiza√ß√£o no banco
                # atualizar_agente(...)
                st.toast('‚úÖ Agente atualizado com sucesso!')   


